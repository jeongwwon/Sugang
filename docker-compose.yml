version: '3.8'

services:
  mysql-master:
    image: mysql:8.0
    container_name: mysql-master
    environment:
      MYSQL_ROOT_PASSWORD: root1234
      MYSQL_DATABASE: portfolio
      MYSQL_USER: portfolio_user
      MYSQL_PASSWORD: portfolio1234
    ports:
      - "3306:3306"
    volumes:
      - ./mysql-master/my.cnf:/etc/mysql/my.cnf:ro
      - ./mysql-master/init-master.sql:/docker-entrypoint-initdb.d/init-master.sql:ro
      - mysql_master_data:/var/lib/mysql
    networks:
      - monitoring
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot1234" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  mysql-slave:
    image: mysql:8.0
    container_name: mysql-slave
    environment:
      MYSQL_ROOT_PASSWORD: root1234
      MYSQL_DATABASE: portfolio
      MYSQL_USER: portfolio_user
      MYSQL_PASSWORD: portfolio1234
    ports:
      - "3307:3306"
    depends_on:
      - mysql-master
    volumes:
      - ./mysql-slave/my.cnf:/etc/mysql/my.cnf:ro
      - ./mysql-slave/slave_init.sh:/docker-entrypoint-initdb.d/slave_init.sh:ro
      - mysql_slave_data:/var/lib/mysql
    networks:
      - monitoring

  app:
    build: .
    container_name: spring-app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-master:3306/portfolio?allowPublicKeyRetrieval=true&useSSL=false&rewriteBatchedStatements=true
      JAVA_OPTS: "-Xms256m -Xmx512m"
    depends_on:
      mysql-master:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - monitoring

  redis:
    image: redis:7.0
    container_name: redis-server
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring

volumes:
  mysql_master_data:
  mysql_slave_data:
  grafana_data:
  redis_data:

networks:
  monitoring:
    driver: bridge
